// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: proto/poll.proto

package poll

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PollType int32

const (
	PollType_single   PollType = 0
	PollType_multiple PollType = 1
)

// Enum value maps for PollType.
var (
	PollType_name = map[int32]string{
		0: "single",
		1: "multiple",
	}
	PollType_value = map[string]int32{
		"single":   0,
		"multiple": 1,
	}
)

func (x PollType) Enum() *PollType {
	p := new(PollType)
	*p = x
	return p
}

func (x PollType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PollType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_poll_proto_enumTypes[0].Descriptor()
}

func (PollType) Type() protoreflect.EnumType {
	return &file_proto_poll_proto_enumTypes[0]
}

func (x PollType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PollType.Descriptor instead.
func (PollType) EnumDescriptor() ([]byte, []int) {
	return file_proto_poll_proto_rawDescGZIP(), []int{0}
}

// Get polls
type GetPollsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPollsRequest) Reset() {
	*x = GetPollsRequest{}
	mi := &file_proto_poll_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPollsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPollsRequest) ProtoMessage() {}

func (x *GetPollsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_poll_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPollsRequest.ProtoReflect.Descriptor instead.
func (*GetPollsRequest) Descriptor() ([]byte, []int) {
	return file_proto_poll_proto_rawDescGZIP(), []int{0}
}

type GetPollsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Polls         []*Poll                `protobuf:"bytes,1,rep,name=polls,proto3" json:"polls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPollsResponse) Reset() {
	*x = GetPollsResponse{}
	mi := &file_proto_poll_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPollsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPollsResponse) ProtoMessage() {}

func (x *GetPollsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_poll_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPollsResponse.ProtoReflect.Descriptor instead.
func (*GetPollsResponse) Descriptor() ([]byte, []int) {
	return file_proto_poll_proto_rawDescGZIP(), []int{1}
}

func (x *GetPollsResponse) GetPolls() []*Poll {
	if x != nil {
		return x.Polls
	}
	return nil
}

type Poll struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Type          PollType               `protobuf:"varint,3,opt,name=type,proto3,enum=poll.PollType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Poll) Reset() {
	*x = Poll{}
	mi := &file_proto_poll_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Poll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Poll) ProtoMessage() {}

func (x *Poll) ProtoReflect() protoreflect.Message {
	mi := &file_proto_poll_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Poll.ProtoReflect.Descriptor instead.
func (*Poll) Descriptor() ([]byte, []int) {
	return file_proto_poll_proto_rawDescGZIP(), []int{2}
}

func (x *Poll) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Poll) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Poll) GetType() PollType {
	if x != nil {
		return x.Type
	}
	return PollType_single
}

type Option struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Option) Reset() {
	*x = Option{}
	mi := &file_proto_poll_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Option) ProtoMessage() {}

func (x *Option) ProtoReflect() protoreflect.Message {
	mi := &file_proto_poll_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Option.ProtoReflect.Descriptor instead.
func (*Option) Descriptor() ([]byte, []int) {
	return file_proto_poll_proto_rawDescGZIP(), []int{3}
}

func (x *Option) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Option) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// Create polls
type CreatePollRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Poll          *PollCreateData        `protobuf:"bytes,1,opt,name=poll,proto3" json:"poll,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePollRequest) Reset() {
	*x = CreatePollRequest{}
	mi := &file_proto_poll_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePollRequest) ProtoMessage() {}

func (x *CreatePollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_poll_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePollRequest.ProtoReflect.Descriptor instead.
func (*CreatePollRequest) Descriptor() ([]byte, []int) {
	return file_proto_poll_proto_rawDescGZIP(), []int{4}
}

func (x *CreatePollRequest) GetPoll() *PollCreateData {
	if x != nil {
		return x.Poll
	}
	return nil
}

type PollCreateData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Options       []*Option              `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`
	Type          PollType               `protobuf:"varint,3,opt,name=type,proto3,enum=poll.PollType" json:"type,omitempty"`
	UserId        int64                  `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PollCreateData) Reset() {
	*x = PollCreateData{}
	mi := &file_proto_poll_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollCreateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollCreateData) ProtoMessage() {}

func (x *PollCreateData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_poll_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollCreateData.ProtoReflect.Descriptor instead.
func (*PollCreateData) Descriptor() ([]byte, []int) {
	return file_proto_poll_proto_rawDescGZIP(), []int{5}
}

func (x *PollCreateData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PollCreateData) GetOptions() []*Option {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *PollCreateData) GetType() PollType {
	if x != nil {
		return x.Type
	}
	return PollType_single
}

func (x *PollCreateData) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CreatePollResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePollResponse) Reset() {
	*x = CreatePollResponse{}
	mi := &file_proto_poll_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePollResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePollResponse) ProtoMessage() {}

func (x *CreatePollResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_poll_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePollResponse.ProtoReflect.Descriptor instead.
func (*CreatePollResponse) Descriptor() ([]byte, []int) {
	return file_proto_poll_proto_rawDescGZIP(), []int{6}
}

func (x *CreatePollResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Get data for a poll
type GetPollRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPollRequest) Reset() {
	*x = GetPollRequest{}
	mi := &file_proto_poll_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPollRequest) ProtoMessage() {}

func (x *GetPollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_poll_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPollRequest.ProtoReflect.Descriptor instead.
func (*GetPollRequest) Descriptor() ([]byte, []int) {
	return file_proto_poll_proto_rawDescGZIP(), []int{7}
}

func (x *GetPollRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetPollResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Poll          *PollData              `protobuf:"bytes,1,opt,name=poll,proto3" json:"poll,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPollResponse) Reset() {
	*x = GetPollResponse{}
	mi := &file_proto_poll_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPollResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPollResponse) ProtoMessage() {}

func (x *GetPollResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_poll_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPollResponse.ProtoReflect.Descriptor instead.
func (*GetPollResponse) Descriptor() ([]byte, []int) {
	return file_proto_poll_proto_rawDescGZIP(), []int{8}
}

func (x *GetPollResponse) GetPoll() *PollData {
	if x != nil {
		return x.Poll
	}
	return nil
}

type PollData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Type          *PollType              `protobuf:"varint,3,opt,name=type,proto3,enum=poll.PollType,oneof" json:"type,omitempty"`
	Options       []*Option              `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PollData) Reset() {
	*x = PollData{}
	mi := &file_proto_poll_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollData) ProtoMessage() {}

func (x *PollData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_poll_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollData.ProtoReflect.Descriptor instead.
func (*PollData) Descriptor() ([]byte, []int) {
	return file_proto_poll_proto_rawDescGZIP(), []int{9}
}

func (x *PollData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PollData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PollData) GetType() PollType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return PollType_single
}

func (x *PollData) GetOptions() []*Option {
	if x != nil {
		return x.Options
	}
	return nil
}

var File_proto_poll_proto protoreflect.FileDescriptor

var file_proto_poll_proto_rawDesc = string([]byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6f, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x04, 0x70, 0x6f, 0x6c, 0x6c, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50,
	0x6f, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x34, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x50, 0x6f, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x20, 0x0a, 0x05, 0x70, 0x6f, 0x6c, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x70, 0x6f, 0x6c, 0x6c, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x05, 0x70, 0x6f, 0x6c, 0x6c,
	0x73, 0x22, 0x50, 0x0a, 0x04, 0x50, 0x6f, 0x6c, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e,
	0x70, 0x6f, 0x6c, 0x6c, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x2c, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x22, 0x3d, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x70, 0x6f, 0x6c, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x6f, 0x6c, 0x6c, 0x2e, 0x50, 0x6f, 0x6c, 0x6c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x70, 0x6f, 0x6c, 0x6c,
	0x22, 0x8b, 0x01, 0x0a, 0x0e, 0x50, 0x6f, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x6f, 0x6c,
	0x6c, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0e, 0x2e, 0x70, 0x6f, 0x6c, 0x6c, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2e,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x20,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x35, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x70, 0x6f, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6f, 0x6c, 0x6c, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x70, 0x6f, 0x6c, 0x6c, 0x22, 0x8a, 0x01, 0x0a, 0x08, 0x50, 0x6f, 0x6c, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x6f, 0x6c, 0x6c, 0x2e,
	0x50, 0x6f, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x6f, 0x6c, 0x6c, 0x2e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2a, 0x24, 0x0a, 0x08, 0x50, 0x6f, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0a, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x10, 0x01, 0x32, 0xc1, 0x01, 0x0a, 0x0b, 0x50,
	0x6f, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x50, 0x6f, 0x6c, 0x6c, 0x73, 0x12, 0x15, 0x2e, 0x70, 0x6f, 0x6c, 0x6c, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x6f, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x70, 0x6f, 0x6c, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x6f, 0x6c, 0x6c, 0x12, 0x17, 0x2e, 0x70, 0x6f, 0x6c, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70,
	0x6f, 0x6c, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c,
	0x6c, 0x12, 0x14, 0x2e, 0x70, 0x6f, 0x6c, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x6f, 0x6c, 0x6c, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x07,
	0x5a, 0x05, 0x70, 0x6f, 0x6c, 0x6c, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_poll_proto_rawDescOnce sync.Once
	file_proto_poll_proto_rawDescData []byte
)

func file_proto_poll_proto_rawDescGZIP() []byte {
	file_proto_poll_proto_rawDescOnce.Do(func() {
		file_proto_poll_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_poll_proto_rawDesc), len(file_proto_poll_proto_rawDesc)))
	})
	return file_proto_poll_proto_rawDescData
}

var file_proto_poll_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_poll_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_poll_proto_goTypes = []any{
	(PollType)(0),              // 0: poll.PollType
	(*GetPollsRequest)(nil),    // 1: poll.GetPollsRequest
	(*GetPollsResponse)(nil),   // 2: poll.GetPollsResponse
	(*Poll)(nil),               // 3: poll.Poll
	(*Option)(nil),             // 4: poll.Option
	(*CreatePollRequest)(nil),  // 5: poll.CreatePollRequest
	(*PollCreateData)(nil),     // 6: poll.PollCreateData
	(*CreatePollResponse)(nil), // 7: poll.CreatePollResponse
	(*GetPollRequest)(nil),     // 8: poll.GetPollRequest
	(*GetPollResponse)(nil),    // 9: poll.GetPollResponse
	(*PollData)(nil),           // 10: poll.PollData
}
var file_proto_poll_proto_depIdxs = []int32{
	3,  // 0: poll.GetPollsResponse.polls:type_name -> poll.Poll
	0,  // 1: poll.Poll.type:type_name -> poll.PollType
	6,  // 2: poll.CreatePollRequest.poll:type_name -> poll.PollCreateData
	4,  // 3: poll.PollCreateData.options:type_name -> poll.Option
	0,  // 4: poll.PollCreateData.type:type_name -> poll.PollType
	10, // 5: poll.GetPollResponse.poll:type_name -> poll.PollData
	0,  // 6: poll.PollData.type:type_name -> poll.PollType
	4,  // 7: poll.PollData.options:type_name -> poll.Option
	1,  // 8: poll.PollService.GetPolls:input_type -> poll.GetPollsRequest
	5,  // 9: poll.PollService.CreatePoll:input_type -> poll.CreatePollRequest
	8,  // 10: poll.PollService.GetPoll:input_type -> poll.GetPollRequest
	2,  // 11: poll.PollService.GetPolls:output_type -> poll.GetPollsResponse
	7,  // 12: poll.PollService.CreatePoll:output_type -> poll.CreatePollResponse
	9,  // 13: poll.PollService.GetPoll:output_type -> poll.GetPollResponse
	11, // [11:14] is the sub-list for method output_type
	8,  // [8:11] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_proto_poll_proto_init() }
func file_proto_poll_proto_init() {
	if File_proto_poll_proto != nil {
		return
	}
	file_proto_poll_proto_msgTypes[9].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_poll_proto_rawDesc), len(file_proto_poll_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_poll_proto_goTypes,
		DependencyIndexes: file_proto_poll_proto_depIdxs,
		EnumInfos:         file_proto_poll_proto_enumTypes,
		MessageInfos:      file_proto_poll_proto_msgTypes,
	}.Build()
	File_proto_poll_proto = out.File
	file_proto_poll_proto_goTypes = nil
	file_proto_poll_proto_depIdxs = nil
}
